buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.epam.petclinic:petclinic-plugins:${petclinicPluginsVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:$nodePluginVersion")
    }
}

apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'com.moowork.node'

// Configure NodeJS
node {
    // Version of node to use
    version = "${nodejsVersion}"

    // If true, it will download node using above parameters
    // If false, it will try to use globally installed node
    download = true

    distBaseUrl = 'https://nodejs.org/dist/'

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")
}

npmInstall {
    args = [
            '--unicode', 'false',
            '--production',
            '--loglevel', 'warn'
    ]
}

def npmScriptPrefix = 'npm_run'
tasks.addRule("Pattern: {npm_run}_<task name>") { String taskName ->
    if (taskName.startsWith(npmScriptPrefix)) {
        tasks[taskName].dependsOn tasks.npmInstall
    }
}

task cleanUI(type: Delete) << {
    [
            'node_modules'
    ].each {
        println 'Deleting ' + it
        delete it
    }
}

tasks.clean.dependsOn tasks.cleanUI
tasks.classes.dependsOn tasks['npm_install']
tasks.classes.dependsOn tasks['npm_run_build']
